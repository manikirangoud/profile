{"version":3,"sources":["videos/video_001.mp4","images/image_001.jpg","images/image_002.jpg","images/image_003.jpg","images/image_004.jpg","images/image_005.jpg","components/AppSection.js","components/ProfileSection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppSection","props","appTitle","appDescription","images","previousIcon","className","icon","faChevronLeft","NextIcon","faChevronRight","id","controls","preload","src","video1","type","data-ride","Carousel","prevIcon","nextIcon","map","image","Item","alt","ProfileSection","Navigation","useState","navbarToggle","setNavbarToggle","navbarClasses","Nav","Link","href","data-toggle","onClick","data-target","exact","path","App","state","appsList","image1","image2","image3","image4","image5","this","setState","require","app","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee9059dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video_001.c30d4a94.mp4\";","module.exports = __webpack_public_path__ + \"static/media/image_001.19a872bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image_002.cfc4f112.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image_003.6a12d205.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image_004.23337963.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image_005.ad77a798.jpg\";","import React  from 'react';\nimport '../css/section.css';\nimport video1 from '../videos/video_001.mp4';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction AppSection(props) {\n\n  var appTitle = props.appTitle;\n  var appDescription = props.appDescription;\n  var images = props.images;\n\n  var previousIcon = <span className=\"btn btn-dark button-left\">\n    <FontAwesomeIcon\n      icon={faChevronLeft}\n    />\n  </span>\n\n  var NextIcon = <span className=\"btn btn-dark button-right\">\n    <FontAwesomeIcon\n      icon={faChevronRight}\n    />\n    </span>\n\n  return (\n    <div className=\"vh-min-85\"> \n      <div className=\"section1 d-flex justify-content-around section-container\" id=\"section1\">\n\n        <div className=\"description col-md-4\">\n          <div className=\"card\">\n            <div className=\"card-header section1\">\n                {appTitle}\n            </div>\n            \n            <div className=\"card-body section1\">\n                <p>{appDescription}</p>\n            </div>\n          </div>\n        </div>\n\n          <div className=\"video\">\n            <div className=\"left-btns\">\n                <div className=\"left-btn1\"></div>\n                <div className=\"left-btn2\"></div>\n                <div className=\"left-btn3\"></div>\n            </div>\n            <div className=\"bg-1\">\n                <div className=\"notch\">\n                    <div className=\"speaker\"></div>\n                    <div className=\"sensor\"></div>\n                </div>\n                <video controls preload=\"metadata\">\n                    <source src={video1} type=\"video/mp4\"/>\n                </video>\n            </div>\n            <div className=\"right-btns\">\n                <div className=\"right-btn1\"></div>\n            </div>\n          </div>\n\n\n          <div id=\"images-main\" className=\"images-main carousel slide\" data-ride=\"carousel\">\n              <div className=\"left-btns\">\n                  <div className=\"left-btn1\"></div>\n                  <div className=\"left-btn2\"></div>\n                  <div className=\"left-btn3\"></div>\n              </div>\n              <div className=\"bg-1\">\n                  <div className=\"notch\">\n                      <div className=\"speaker\"></div>\n                      <div className=\"sensor\"></div>\n                  </div>\n\n                  <div className=\"images carousel-inner\">\n                    <Carousel \n                      prevIcon={previousIcon}\n                      nextIcon={NextIcon}>\n                        {\n                          images.map(image =>{\n                            return (\n                              <Carousel.Item >\n                                <img\n                                  className=\"d-block w-100\"\n                                  src={image}\n                                  alt=\"First slide\"\n                                />\n                              </Carousel.Item>\n                            )\n                          })\n                        }                                          \n                    </Carousel>\n                  </div>\n              </div>\n              <div className=\"right-btns\">\n                  <div className=\"right-btn1\"></div>\n              </div>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default AppSection;\n","import React  from 'react';\nimport '../css/section.css';\n\n\nfunction ProfileSection() {\n\n  return (\n    <div className=\"vh-min-85\"> \n      <div className=\"section4 d-flex justify-content-around section-container\" id=\"section4\">\n            <div className=\"description col-md-4\">\n            <div className=\"card\">\n                <div className=\"card-header section4\">\n                    Hire Manikiran ?\n                </div>\n                \n                <div className=\"card-body section4\">\n                    <p>appDescription</p>\n                </div>\n            </div>\n            </div>  \n        </div>\n    </div>\n  );\n}\n\nexport default ProfileSection;\n","import  React, { useState } from 'react';\nimport { Nav } from 'react-bootstrap'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction Navigation() {\n\n  const [navbarToggle, setNavbarToggle] = useState(false);\n  var navbarClasses = navbarToggle ? 'navbar-collapse' : 'collapse navbar-collapse'; \n\n  return (\n    <Router>\n      <div className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <Nav.Link className=\"navbar-brand pl-0\" href=\"#\">Manikirans' Portfolio</Nav.Link>\n          <button className=\"navbar-toggler d-lg-none d-flex flex-column border-0\" \n            type=\"button\" data-toggle=\"collapse\" \n            onClick = {() => setNavbarToggle(!navbarToggle)}\n            data-target=\"#navbarContent\" id=\"btnNavbar\">\n            <span className=\"icon-bar mt-1\"></span>\n            <span className=\"icon-bar\"></span>\n            <span className=\"icon-bar\"></span>\n          </button>        \n          <div className={navbarClasses} id=\"navbarContent\">\n            <ul className=\"navbar-nav ml-auto\">\n                <Nav.Link className=\"nav-item active\" href=\"#\">L Music Player</Nav.Link>\n                <Nav.Link className=\"nav-item\" href=\"#\">Food Order</Nav.Link>\n                <Nav.Link className=\"nav-item\" href=\"#\">Bluetooth Beacons</Nav.Link>\n                <Nav.Link className=\"nav-item\" href=\"#\">Hire Manikiran ?</Nav.Link>\n            </ul>\n          </div>\n      </div>\n      <Switch>\n          <Route exact path=\"#\">\n          </Route>       \n      </Switch>\n    </Router>\n  );\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport AppSection from './components/AppSection';\nimport ProfileSection from './components/ProfileSection';\nimport Navigation from './components/Navigation';\nimport image1 from './images/image_001.jpg';\nimport image2 from './images/image_002.jpg';\nimport image3 from './images/image_003.jpg';\nimport image4 from './images/image_004.jpg';\nimport image5 from './images/image_005.jpg';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      appsList: [],\n      images: [image1, image2, image3, image4, image5],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ appsList: require('./data/data.json') });\n  }\n\n  render() {\n\n    return (\n      <div className=\"bg-gray-100 h-screen\">\n        <Navigation />\n        {          \n          this.state.appsList.map(app => {\n            return (\n              <AppSection \n              appTitle={app.appTitle}\n              appDescription={app.appDescription}\n              images={this.state.images} />\n            )\n          })\n        }   \n        <ProfileSection/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}